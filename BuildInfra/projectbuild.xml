<?xml version="1.0" encoding="UTF-8"?>

<project name="TongueTiedProjectBuild" default="global.build" basedir=".">

    <property name="app.root" value="${basedir}/../"/>
	
    <property file="${app.root}/BuildInfra/global.properties"/>
    <property name="server.jar.file" value="server.jar"/>
    <property name="server.war.file" value="tonguetied.war"/>
    
    <!-- temporary directories -->
    <property name="output.dir" value="${infra.home}/output"/>

    <!-- target used to invoke a build script with a set of properties -->
    <!-- param: module.path -->
    <!-- param: target      -->
    <target name="build.module">
        <ant antfile="build.xml" dir="${module.path}" target="${target}" inheritall="false">
        </ant>
    </target>

    <!-- targets used to build various modules -->
    <!-- param: target -->
    <target name="build.infra">
        <antcall target="build.module">
            <param name="module.path" value="${infra.home}"/>
        </antcall>
    </target>

    <target name="build.application">
        <antcall target="build.module">
            <param name="module.path" value="${application.home}"/>
        </antcall>
    </target>

    <target name="build.server">
        <antcall target="build.module">
            <param name="module.path" value="${server.home}"/>
        </antcall>
    </target>

    <target name="build.tests">
        <antcall target="build.module">
            <param name="module.path" value="${tests.home}"/>
        </antcall>
    </target>

    <!-- batch build targets -->

    <!-- param: target -->
    <target name="build.all">
        <antcall target="build.infra"/>
        <antcall target="build.application"/>
        <antcall target="build.server"/>
        <antcall target="build.tests"/>
    </target>

    <target name="global.clean" description="Remove all class files">
        <antcall target="build.all">
            <param name="target" value="clean"/>
        </antcall>
    </target>

    <target name="global.build" description="Build the entire application">
        <antcall target="build.all">
            <param name="target" value="build"/>
        </antcall>
    </target>

    <target name="global.javadoc" description="Generate javadoc for the entire application, ie all projects">
        <antcall target="build.all">
            <param name="target" value="javadoc"/>
        </antcall>
    </target>
    
    <target name="global.analyze.code" description="Inspect Java bytecode for occurrences of bug patterns using a static analysis tool for the entire application, ie all projects">
        <antcall target="build.all">
            <param name="target" value="analyze.code"/>
        </antcall>
    </target>
    
    <target name="global.code.metrics" description="Perform architectural code metrics for the entire application, ie all projects">
        <echo message="Performing code metrics for application ${ant.project.name}..."/>
        <jdepend format="xml" outputfile="${output.dir}/jdepend_metrics.xml">
            <exclude name="fmpp*"/>
            <exclude name="freemarker*"/>
            <exclude name="java.*"/>
            <exclude name="javax.*"/>
            <exclude name="org.apache.*"/>
            <exclude name="org.hibernate*"/>
            <exclude name="org.mortbay.*"/>
            <exclude name="org.springframework.*"/>
            <classespath>
                <pathelement location="${application.home}/classes"/>
                <pathelement location="${server.home}/classes"/>
            </classespath>
        </jdepend>
        
        <echo message="creating html output of code metrics"/>
        <xslt in="${output.dir}/jdepend_metrics.xml"
              out="${output.dir}/jdepend.html" 
              style="${ant.home}/etc/jdepend.xsl">
            <outputproperty name="method" value="html"/>
        </xslt>
        
        <echo message="creating diagram of code metrics"/>
        <xslt in="${output.dir}/jdepend_metrics.xml"
              out="${output.dir}/jdepend.dot"
              style="${3rdparty.home}/jDepend/2.9.1/jdepend2dot.xsl">
        </xslt>
        
        <!-- Cannot guarentee that every machine has Graphviz installed so don't
             fail the task if the graph cannot be generated. -->
        <exec executable="dot" failifexecutionfails="false" dir="${output.dir}">
            <arg value="-Tjpg"/>
            <arg value="-o"/>
            <arg value="jdepend-${ant.project.name}.jpg"/>
            <arg value="jdepend.dot"/>
        </exec>
    </target>
    
    <target name="package" description="Create the full application package with all depedencies for distribution.">
        <mkdir dir="${package.dir}"/>   
        <tstamp/>
        <zip destfile="${package.dir}/${version}-${DSTAMP}.zip" >
            <zipfileset dir="${3rdparty.home}/Ant/1.7.0" prefix="${version}/libs">
                <include name="ant.jar"/>
            </zipfileset>
            <zipfileset dir="${3rdparty.home}/Jakarta-Commons" prefix="${version}/libs">
                <include name="commons-cli-1.1.jar"/>
            </zipfileset>
            <zipfileset dir="${3rdparty.home}/HSQLDB/1.8.0.9" prefix="${version}/libs">
                <include name="hsqldb.jar"/>
            </zipfileset>
            <zipfileset dir="${3rdparty.home}/Jetty/6.1.9" prefix="${version}/libs">
                <include name="jetty.jar"/>
                <include name="jetty-util.jar"/>
                <include name="servlet-api-2.5.jar"/>
            </zipfileset>   
            <zipfileset dir="${3rdparty.home}/Jetty/6.1.9/jsp-2.1" prefix="${version}/libs">
                <include name="core-3.1.1.jar"/>
                <include name="jsp-2.1.jar"/>
                <include name="jsp-api-2.1.jar"/>
            </zipfileset>
            <zipfileset dir="${3rdparty.home}/Log4j/1.2.15" prefix="${version}/libs">
                <include name="log4j.jar"/>
            </zipfileset>
            <zipfileset dir="${server.home}/builds" prefix="${version}/libs">
                <include name="${server.jar.file}"/>
            </zipfileset>
            <zipfileset dir="${server.home}/builds/war" prefix="${version}/webapps">
                <include name="${server.war.file}"/>
            </zipfileset>
            <zipfileset dir="${server.home}/resources/shellScripts" prefix="${version}">
                <include name="startServer.bat"/>
                <include name="startDB.bat"/>
                <include name="createDB.bat"/>
            </zipfileset>
            <zipfileset dir="${server.home}/resources/config" prefix="${version}">
                <include name="embeddedServer.properties"/>
                <include name="log4j.properties"/>
            </zipfileset>
            <zipfileset dir="${server.home}/generated" prefix="${version}">
                <include name="keystore"/>
            </zipfileset>
            <zipfileset dir="${infra.home}" prefix="${version}">
                <include name="server.properties"/>
            </zipfileset>
        </zip>
    </target>
</project>
