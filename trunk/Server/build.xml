<?xml version="1.0" encoding="UTF-8"?>

<!-- Use "ant -p" to see a description of tasks -->
<project name="Server" xmlns:ivy="antlib:org.apache.ivy.ant" default="build" basedir=".">

    <property environment="env"/>

    <property name="app.root" value="${basedir}/../"/>

    <property file="${app.root}/BuildInfra/global.properties"/>

    <property name="module.jarfile" value="server.jar"/>

    <property name="src.dir" value="${server.home}/src"/>
    <property name="resources.dir" value="${server.home}/resources"/>
    <property name="config.dir" value="${resources.dir}/config"/>
    <property name="findbugs.home" value="${3rdparty.home}/findbugs/1.3.2"/>
    <property name="findbugs.xml.file" value="${ant.project.name}-bug-report.xml"/>
    <property name="web.server.root" value="${user.dir}/tonguetied/webapp"/>
    <property name="web.server.css" value="${web.server.root}/css"/>
    <property name="web.server.images" value="${web.server.root}/images"/>
    <property name="web.server.scripts" value="${web.server.root}/scripts"/>
    <property name="web.server.webinf" value="${web.server.root}/WEB-INF"/>

    <!-- temporary directories -->
    <property name="classes.dir" value="${server.home}/classes"/>
    <property name="build.dir" value="${server.home}/builds"/>
    <property name="docs.dir" value="${server.home}/docs"/>
    <property name="generated.dir" value="${server.home}/generated"/>
    <property name="docs.api.dir" value="${docs.dir}/api"/>
    <property name="logs.dir" value="${server.home}/logs"/>
    <property name="output.dir" value="${server.home}/output"/>
    <property name="compiled.reports.dir" value="${generated.dir}/reports"/>
    <property name="build.details.file" value="${generated.dir}/buildNumber.properties"/>


    <property name="build.debug" value="on"/>

    <path id="compile.classpath">
        <pathelement location="${3rdparty.home}/Jetty/6.1.1/jetty.jar"/>
        <pathelement location="${3rdparty.home}/Jetty/6.1.1/jetty-util.jar"/>
        <pathelement location="${3rdparty.home}/Jakarta-Commons/commons-cli-1.1.jar"/>
        <pathelement location="${3rdparty.home}/Log4j/1.2.14/log4j.jar"/>
    </path>

    <taskdef name="findbugs" classname="edu.umd.cs.findbugs.anttask.FindBugsTask">
        <classpath path="${findbugs.home}/lib/findbugs-ant.jar"/>
    </taskdef>	

    <target name="init">
        <mkdir dir="${classes.dir}"/>
        <mkdir dir="${build.dir}"/>
        <mkdir dir="${docs.dir}"/>
        <mkdir dir="${generated.dir}"/>
        <mkdir dir="${output.dir}"/>
        <mkdir dir="${compiled.reports.dir}"/>
        <mkdir dir="${logs.dir}"/>
    </target>

    <target name="clean.classes" description="Remove all compiled classes">
        <echo message="Cleaning ${ant.project.name} ..."/>
        <delete dir="${classes.dir}" failonerror="true" deleteonexit="true"/>
    </target>

    <target name="clean" depends="clean.classes" description="Remove all generated files, including but not limited to classes, log files and jar files">
        <delete dir="${build.dir}" failonerror="true" deleteonexit="true"/>
        <delete dir="${docs.dir}" failonerror="true" deleteonexit="true"/>
        <delete dir="${output.dir}" failonerror="true" deleteonexit="true"/>
        <delete dir="${generated.dir}" failonerror="true" deleteonexit="true"/>
        <delete dir="${logs.dir}" failonerror="true" deleteonexit="true"/>
    </target>

    <target name="compile" depends="init" description="Generate all the class files for this module">
        <echo message="Compiling module ${ant.project.name} ..."/>
        <javac srcdir="${src.dir}"
               destdir="${classes.dir}"
               debug="${build.debug}"
               optimize="off"
               deprecation="off">
            <include name="**/*.java"/>
            <classpath refid="compile.classpath" />
        </javac>
    </target>

    <target name="jar" depends="compile" description="Generate the Java Archive files and put it an accessible location for other projects">
        <echo message="Generating jar file for module ${ant.project.name} ..."/>
        <jar jarfile="${build.dir}/${module.jarfile}">
            <zipfileset dir="${classes.dir}">
                <include name="**/*.class"/>             	
            </zipfileset>
        </jar>
    </target>

    <target name="manage.build.properties" depends="init">
        <propertyfile file="${build.details.file}" comment="Last tonguetied build">
            <entry key="build.date" type="date" value="now"/>
            <entry key="version" type="string" value="${shortversion}"/>
            <entry key="build.number" type="string" value="@@${label}"/>
        </propertyfile>
        <replace file="${build.details.file}" token="@@build." value=""/>
    </target>
    
    <target name="build" depends="validate.xml, jar" description="Compile entire module and validate xml files"/>
 
    <target name="validate.xml" description="Validate XML configuration files" >
        <echo message="validating XML in module ${ant.project.name}..." />
    </target>

    <target name="javadoc" depends="init" description="Generate the javadoc for this module">
        <echo message="Generating java api documentation for module ${ant.project.name}..."/>
        <javadoc destdir="${docs.api.dir}"
                 useexternalfile="true"
                 author="true"
                 version="true"
                 use="true"
                 classpathref="compile.classpath"
                 windowtitle="${ant.project.name} API">
            <doctitle><![CDATA[<h1>]]>${application.name}:- ${ant.project.name}<![CDATA[</h1>]]></doctitle>
            <bottom><![CDATA[<i>Copyright &#169; 2008 Ben Sion. All Rights Reserved.</i>]]></bottom>
            <fileset dir="${src.dir}" includes="**/*.java"/>
        </javadoc>
    </target>

    <target name="analyze.code" depends="init" description="Inspect Java bytecode for occurrences of bug patterns using a static analysis tool">
        <echo message="Performing code analysis on module ${ant.project.name}..."/>
        <findbugs home="${findbugs.home}"
                  reportlevel="low"
                  effort="max"
                  jvmargs="-Xmx256M"
                  output="xml:withMessages"
                  outputFile="${output.dir}/${findbugs.xml.file}">
            <auxclasspath refid="compile.classpath"/>
            <sourcepath path="${src.dir}"/>
            <class location="${build.dir}/${module.jarfile}"/>
        </findbugs>
        <xslt in="${output.dir}/${findbugs.xml.file}"
              out="${output.dir}/${findbugs.xml.file}.html"
              style="${findbugs.home}/src/xsl/fancy.xsl">
            <outputproperty name="method" value="html"/>
        </xslt>
    </target>

    <target name="code.metrics" depends="init" description="Analyze package dependencies and perform quality metrics on architecture">
        <echo message="Performing code metrics on module ${ant.project.name}..."/>
        <jdepend format="xml" outputfile="${output.dir}/jdepend_metrics.xml">
            <exclude name="java.*"/>
            <exclude name="javax.*"/>
            <exclude name="org.apache.*"/>
            <exclude name="org.hibernate"/>
            <exclude name="org.hibernate.*"/>
            <exclude name="org.mortbay.*"/>
            <exclude name="org.springframework.*"/>
            <classespath>
                <pathelement location="${classes.dir}"/>
            </classespath>
            <classpath refid="compile.classpath"/>   
        </jdepend>
        
        <echo message="creating html output of code metrics"/>
        <xslt in="${output.dir}/jdepend_metrics.xml"
              out="${output.dir}/jdepend.html" 
              style="${ant.home}/etc/jdepend.xsl">
            <outputproperty name="method" value="html"/>
        </xslt>
        
        <echo message="creating diagram of code metrics"/>
        <xslt in="${output.dir}/jdepend_metrics.xml"
              out="${output.dir}/jdepend.dot"
              style="${3rdparty.home}/jDepend/2.9.1/jdepend2dot.xsl">
        </xslt>
        
        <!-- Cannot guarentee that every machine has Graphviz installed so don't
             fail the task if the graph cannot be generated. -->
        <exec executable="dot" failifexecutionfails="false" dir="${output.dir}">
            <arg value="-Tjpg"/>
            <arg value="-o"/>
            <arg value="jdepend-${ant.project.name}.jpg"/>
            <arg value="jdepend.dot"/>
        </exec>
    </target>
</project>